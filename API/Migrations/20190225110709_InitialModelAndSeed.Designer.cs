// <auto-generated />
using System;
using DataStore.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataStore.Migrations
{
    [DbContext(typeof(DataStore_DBContext))]
    [Migration("20190225110709_InitialModelAndSeed")]
    partial class InitialModelAndSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataStore.Models.Location", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Sydney"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Melbourne"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Brisbane"
                        });
                });

            modelBuilder.Entity("DataStore.Models.Locker", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LockerBankId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("LockerBankId");

                    b.ToTable("Lockers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LockerBankId = 1,
                            Name = "L1"
                        },
                        new
                        {
                            Id = 2,
                            LockerBankId = 1,
                            Name = "L2"
                        },
                        new
                        {
                            Id = 3,
                            LockerBankId = 1,
                            Name = "L3"
                        },
                        new
                        {
                            Id = 4,
                            LockerBankId = 1,
                            Name = "L4"
                        },
                        new
                        {
                            Id = 5,
                            LockerBankId = 1,
                            Name = "L5"
                        },
                        new
                        {
                            Id = 6,
                            LockerBankId = 2,
                            Name = "L1"
                        },
                        new
                        {
                            Id = 7,
                            LockerBankId = 2,
                            Name = "L2"
                        },
                        new
                        {
                            Id = 8,
                            LockerBankId = 2,
                            Name = "L3"
                        },
                        new
                        {
                            Id = 9,
                            LockerBankId = 3,
                            Name = "L1"
                        },
                        new
                        {
                            Id = 10,
                            LockerBankId = 3,
                            Name = "L2"
                        },
                        new
                        {
                            Id = 11,
                            LockerBankId = 3,
                            Name = "L3"
                        },
                        new
                        {
                            Id = 12,
                            LockerBankId = 4,
                            Name = "L1"
                        },
                        new
                        {
                            Id = 13,
                            LockerBankId = 4,
                            Name = "L2"
                        },
                        new
                        {
                            Id = 14,
                            LockerBankId = 4,
                            Name = "L3"
                        },
                        new
                        {
                            Id = 15,
                            LockerBankId = 5,
                            Name = "L1"
                        },
                        new
                        {
                            Id = 16,
                            LockerBankId = 5,
                            Name = "L2"
                        },
                        new
                        {
                            Id = 17,
                            LockerBankId = 5,
                            Name = "L3"
                        },
                        new
                        {
                            Id = 18,
                            LockerBankId = 6,
                            Name = "L1"
                        },
                        new
                        {
                            Id = 19,
                            LockerBankId = 6,
                            Name = "L2"
                        },
                        new
                        {
                            Id = 20,
                            LockerBankId = 6,
                            Name = "L3"
                        },
                        new
                        {
                            Id = 21,
                            LockerBankId = 6,
                            Name = "L4"
                        },
                        new
                        {
                            Id = 22,
                            LockerBankId = 7,
                            Name = "L1"
                        },
                        new
                        {
                            Id = 23,
                            LockerBankId = 7,
                            Name = "L2"
                        },
                        new
                        {
                            Id = 24,
                            LockerBankId = 7,
                            Name = "L3"
                        },
                        new
                        {
                            Id = 25,
                            LockerBankId = 7,
                            Name = "L4"
                        });
                });

            modelBuilder.Entity("DataStore.Models.LockerBank", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LocationId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.ToTable("LockerBanks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LocationId = 1,
                            Name = "cbd_lockerbank_1"
                        },
                        new
                        {
                            Id = 2,
                            LocationId = 1,
                            Name = "manly_lockerbank_2"
                        },
                        new
                        {
                            Id = 3,
                            LocationId = 1,
                            Name = "terrey_Hills_lockerbank_3"
                        },
                        new
                        {
                            Id = 4,
                            LocationId = 2,
                            Name = "cbd_lockerbank_1"
                        },
                        new
                        {
                            Id = 5,
                            LocationId = 2,
                            Name = "southbank_lockerbank_2"
                        },
                        new
                        {
                            Id = 6,
                            LocationId = 3,
                            Name = "cbd_lockerbank_1"
                        },
                        new
                        {
                            Id = 7,
                            LocationId = 3,
                            Name = "south_brisbane_lockerbank_2"
                        });
                });

            modelBuilder.Entity("DataStore.Models.Locker", b =>
                {
                    b.HasOne("DataStore.Models.LockerBank", "LockerBank")
                        .WithMany("Lockers")
                        .HasForeignKey("LockerBankId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DataStore.Models.LockerBank", b =>
                {
                    b.HasOne("DataStore.Models.Location", "Location")
                        .WithMany("LockerBanks")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
